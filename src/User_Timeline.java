import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;



public class User_Timeline extends JFrame {
	private User activeUser, friend;
	private Post_View UserTimelineView_Post;
	/**
	 * Creates new form UserTimeline
	 */
	public User_Timeline(User activeuser, User friend) {
		super(friend.getName()+ "'s Timeline");
		this.friend = friend;
		this.activeUser=activeuser;
		UserTimelineView_Post = new Post_View(friend, "User_Timeline");

		initComponents();



		this.setVisible(true);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	private void initComponents() {

        SearchButton = new javax.swing.JButton();
        GroupsButton = new javax.swing.JButton();
        commonFriendsButton = new javax.swing.JButton();
        isFriendsButton = new javax.swing.JToggleButton();
        morePostsButton = new javax.swing.JButton();
        postToTimelineButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        postsPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        SearchButton.setText("Search");
		SearchButton.addActionListener(new SearchActionListener());

		GroupsButton.setText("Groups");
		GroupsButton.addActionListener(new groupsActionListener());

		commonFriendsButton.setText("Common Friends");
		commonFriendsButton.addActionListener(new CommonFriendsListener());

		if(!activeUser.equals(friend)){
			if(activeUser.isFriend(friend)) isFriendsButton.setText("Delete Friend");
			else isFriendsButton.setText("Add Friend");
			isFriendsButton.addActionListener(new isFriendsButtonActionListener());			
		}else isFriendsButton.setEnabled(false);


		morePostsButton.setText("More Posts");
		morePostsButton.addActionListener(new NextPostsListener());

		postToTimelineButton.setText("Post to Timeline");
		postToTimelineButton.addActionListener(new postToTimelineActionListener());

		BackButton.setText("Back to Home Page");
		BackButton.addActionListener(new BackListener());

        postsPanel.setBackground(new java.awt.Color(153, 255, 255));
        postsPanel.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(postsPanel);
        postsPanel.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 281, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(postsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(morePostsButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SearchButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(GroupsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(commonFriendsButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(postToTimelineButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isFriendsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchButton)
                    .addComponent(GroupsButton)
                    .addComponent(commonFriendsButton)
                    .addComponent(isFriendsButton)
                    .addComponent(BackButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(postToTimelineButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addComponent(morePostsButton))
        );

        pack();
        this.setVisible(true);
    }// </editor-fold>
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	                           



	//Listeners
	class isFriendsButtonActionListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			if(isFriendsButton.getText().equals("Add Friend")){
				activeUser.addFriend(friend);
				DataBase.save();
				isFriendsButton.setText("Delete Friend");

			}
			else if(isFriendsButton.getText().equals("Delete Friend")){
				activeUser.removeFriend(friend);
				DataBase.save();
				isFriendsButton.setText("Add Friend");
			}

		}
	}

	class postToTimelineActionListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			DataBase.createPost(activeUser, friend, null);
		}
	}


	class BackListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			setVisible(false);
		}

	}

	class CommonFriendsListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			//TODO
		}
	}

	class NextPostsListener implements ActionListener{
		public void actionPerformed(ActionEvent e){
			//TODO
			post(5);
		}
	}

	class SearchActionListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			new SearchScreen(activeUser);
		}

	}
	class groupsActionListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{
			//TODO
			new DisplayLists(activeUser, activeUser.getFriends(), activeUser.getGroups());
		}

	}
	
	public void post(int numberOfPosts){//the number of posts to be displayed
		int i;
		for(i=0; i<numberOfPosts; i++){
		postsPanel.add(UserTimelineView_Post.display(friend, null));
		postsPanel.repaint();
		postsPanel.revalidate();
		}
	}




	// Variables declaration - do not modify                     
    private javax.swing.JButton BackButton;
    private javax.swing.JButton GroupsButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.JButton commonFriendsButton;
    private javax.swing.JToggleButton isFriendsButton;
    private javax.swing.JPanel postsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton morePostsButton;
    private javax.swing.JButton postToTimelineButton;
    // End of variables declaration                     



	


}



