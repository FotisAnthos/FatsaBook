import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Collections;

public class Post_View extends javax.swing.JFrame {
	private User activeUser;
	private int posts_displayed;
	private String displayPlace;
	/**
	 * Creates new form PostView
	 */
	public Post_View(User activeUser, String displayPlace) {
		this.activeUser = activeUser;
		this.displayPlace = displayPlace;
		display(null);//TODO this must change






	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		postDescription = new javax.swing.JLabel();
		postText = new javax.swing.JTextField();
		LikeButton = new javax.swing.JButton();
		NewCommentButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		postDescription.setText("Description User->User or User->Group");

		postText.setText("jTextField1");

		LikeButton.setText("Like");

		NewCommentButton.setText("Comment");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(postText, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(postDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addComponent(LikeButton)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(NewCommentButton)))
						.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
				);
		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(postDescription)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(postText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(LikeButton)
								.addComponent(NewCommentButton))
						.addGap(0, 29, Short.MAX_VALUE))
				);

		getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

		pack();                      





	}

	// Variables declaration - do not modify                     
	private javax.swing.JButton LikeButton;
	private javax.swing.JButton NewCommentButton;
	private javax.swing.JLabel postDescription;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JTextField postText;
	// End of variables declaration   
	public Post postToBeDisplayedUser(User activeUser,User anotherUser){

		if(activeUser.isFriend(anotherUser)){								 
			Collections.sort(anotherUser.getPersonalPosts()); //TODO check / Collections.sort refers to List not ArrayList
			return anotherUser.getPersonalPosts().get(posts_displayed++);	
		}
		return null;
	}

	public Post postToBeDisplayedGroup(Group agroup){ 
		if(agroup.isMember(activeUser)){							 
			Collections.sort(agroup.getGroupPosts()); //TODO Collections.sort refers to List not ArrayList
			return agroup.getGroupPosts().get(posts_displayed++);
		}
		return null;
	}
	
	public Post postToBeDisplayedHomePage(User activeUser){
		return null;
	}
	
	public void display(Post apost){//Post apost will be defined by postToBeDisplayedUser/postToBeDisplayedGroup/postToBeDisplayedHomePage
		initComponents();
		postText.setText(apost.getPostText());
		
		
		
		
		
		
	}
	
	
	
	class likeButtonListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{	
			
		}
	}
	
	class commentButtonListener implements ActionListener
	{
		public void actionPerformed(ActionEvent e)
		{	
			
		}
	}

}
